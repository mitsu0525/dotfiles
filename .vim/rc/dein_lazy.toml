[[plugins]]
repo = 'Shougo/neoyank.vim'
on_event = 'TextYankPost'
on_source = ['denite.nvim']

[[plugins]]
repo = 'Shougo/neomru.vim'

[[plugins]]
repo = 'Shougo/denite.nvim'
depends = 'neomru.vim'
on_if = 'has("python3")'
on_cmd = 'Denite'
hook_source = 'source ~/.vim/rc/plugins/denite.vim'
hook_add = '''
    " The prefix key
    nnoremap [denite] <Nop>
    nmap ; [denite]
    " denite.vim keymap
    nnoremap <silent> [denite]b :<C-u>Denite buffer<CR>
    nnoremap <silent> [denite]f :<C-u>Denite file_rec<CR>
    nnoremap <silent> [denite]m :<C-u>Denite file_mru<CR>
    nnoremap <silent> [denite]g :<C-u>Denite -buffer-name=search grep<CR>
    nnoremap <silent> [denite]r :<C-u>Denite -buffer-name=search -resume<CR>
    nnoremap <silent> /         :<C-u>Denite -buffer-name=search -auto-highlight line<CR>
    nnoremap <silent> [denite]/ :<C-u>DeniteCursorWord -buffer-name=search -auto-highlight -mode=normal line<CR>
    nnoremap <silent> [denite]p :<C-u>Denite -buffer-name=register neoyank<CR>`]
    xnoremap <silent> [denite]p :<C-u>Denite -buffer-name=register neoyank<CR>`]
    " Paste like YankRing
    nnoremap <silent> p      :<C-u>Denite -buffer-name=register neoyank -immediately<CR>`]
    nnoremap <silent> <C-p> u:<C-u>Denite -buffer-name=register -resume -cursor-pos=+1 -immediately<CR>`]
    nnoremap <silent> <C-n> u:<C-u>Denite -buffer-name=register -resume -cursor-pos=-1 -immediately<CR>`]
'''

[[plugins]]
repo = 'Shougo/deoplete.nvim'
on_if = 'has("python3")'
depends = ['context_filetype.vim', 'vim-hug-neovim-rpc', 'nvim-yarp']
on_event = 'InsertEnter'
hook_source = '''
    source ~/.vim/rc/plugins/deoplete.vim
    call deoplete#enable()
'''

[[plugins]]
repo = 'raghur/fruzzy'
on_source = ['denite.nvim']
hook_source = 'let g:fruzzy#sortonempty = 0'
hook_post_update = 'call fruzzy#install()'

[[plugins]]
repo = 'thinca/vim-quickrun'
hook_add = '''
    nnoremap <silent><Space>r :QuickRun<CR>
    nnoremap <expr><silent> <C-c> quickrun#is_running() ? quickrun#sweep_sessions() : "\<C-c>"
'''
hook_source = '''
autocmd FileType qf nnoremap <silent><buffer>q :quit<CR>
let g:quickrun_config = {
    \'_' : {
        \ 'outputter/buffer/split' : ':botright 8sp',
        \ 'outputter/error/success' : 'buffer',
        \ 'outputter/error/error'   : 'quickfix',
        \ 'outputter/buffer/into' : '1',
        \ 'outputter/quickfix/errorformat' : '%f:%l,%m in %f on line %l',
        \ 'outputter/buffer/close_on_empty' : 1,
        \ 'outputter' : 'error',
        \},
    \'tex' : {
        \ 'command' : 'latexmk',
        \ 'outputter' : 'error',
        \ 'outputter/error/success' : 'null',
        \ 'outputter/error/error' : 'quickfix',
        \ 'srcfile' : expand("%s"),
        \ 'exec': '%c %s %a %o',
        \},
    \}
}
'''

[[plugins]]
repo = 'rhysd/accelerated-jk'
on_map = {n = '<Plug>'}
hook_add = '''
  nmap <silent>j <Plug>(accelerated_jk_gj)
  nmap <silent>k <Plug>(accelerated_jk_gk)
'''

[[plugins]]
repo = 'kana/vim-niceblock'
on_map = {x = '<Plug>'}
hook_add = '''
  xmap A  <Plug>(niceblock-A)
  xmap I  <Plug>(niceblock-I)
'''

[[plugins]]
repo = 'osyo-manga/vim-textobj-blockwise'
depends = 'vim-textobj-user'
on_map = {o = '<Plug>'}
hook_add = '''
    omap A <Plug>(textobj-multiblock-a)
    omap I <Plug>(textobj-multiblock-i)
'''

[[plugins]]
repo = 'kana/vim-operator-replace'
depends = 'vim-operator-user'
on_map = {n = '<Plug>'}
hook_add = '''
    nmap R <Plug>(operator-replace)
'''

[[plugins]]
repo = 'rhysd/vim-operator-surround'
depends = 'vim-operator-user'
on_map = {n = '<Plug>'}
hook_add = '''
  nmap <silent>sa <Plug>(operator-surround-append)a
  nmap <silent>sd <Plug>(operator-surround-delete)a
  nmap <silent>sr <Plug>(operator-surround-replace)a
'''

[[plugins]]
repo = 'osyo-manga/vim-jplus'
on_map = {n = '<Plug>'}
hook_add = '''
  nmap J <Plug>(jplus)
'''

[[plugins]]
repo = 'tyru/open-browser.vim'

[[plugins]]
repo = 'Shougo/neco-syntax'

[[plugins]]
repo = 'Shougo/neco-vim'
on_ft = 'vim'

[[plugins]]
repo = 'zchee/deoplete-jedi'
on_ft = 'py'

[[plugins]]
repo = 'zchee/deoplete-zsh'
on_ft = ['zsh', 'sh']

[[plugins]] # TOMLのシンタックス
repo = 'cespare/vim-toml'
on_ft = 'toml'

[[plugins]]
repo = 'zplug/vim-zplug'
on_ft = 'zsh'

# [[plugins]]
# repo = 'jalvesaq/Nvim-R'
# on_ft = 'r'

[[plugins]]
repo = 'fatih/vim-go'
on_ft = 'go'

[[plugins]]
repo = 'lervag/vimtex'
hook_add = '''
    let g:tex_conceal=''
'''
on_ft = 'tex'
