[[plugins]] # user interface
repo = 'Shougo/denite.nvim'
on_if = 'has("python3")'
on_cmd = 'Denite'
hook_source = 'source ~/.vim/rc/plugins/denite.vim'
hook_add = '''
    autocmd MyAutoCmd FileType denite setlocal signcolumn=no
    " The prefix key
    nnoremap [denite] <Nop>
    xnoremap [denite] <Nop>
    nmap ; [denite]
    xmap ; [denite]
    " denite.vim keymap
    nnoremap <silent> [denite]b :<C-u>Denite buffer<CR>
    nnoremap <silent> [denite]f :<C-u>Denite file/rec<CR>
    nnoremap <silent> [denite]m :<C-u>Denite file_mru<CR>
    nnoremap <silent> [denite]g :<C-u>Denite -buffer-name=search grep<CR>
    nnoremap <silent> [denite]; :<C-u>Denite -buffer-name=search -resume<CR>
    nnoremap <silent> /         :<C-u>Denite -buffer-name=search line<CR>
    nnoremap <silent> [denite]/ :<C-u>DeniteCursorWord -buffer-name=search -mode=normal line<CR>
    nnoremap <silent> [denite]p :<C-u>Denite -buffer-name=register neoyank<CR>
    xnoremap <silent> [denite]p :<C-u>Denite -buffer-name=register neoyank<CR>
    nnoremap <silent> [denite]c :<C-u>Denite command command_history<CR>
'''
[plugins.ftplugin]
denite = '''
    nnoremap <silent><buffer><expr> <CR>    denite#do_map('do_action')
    nnoremap <silent><buffer><expr> <TAB>   denite#do_map('toggle_select').'j'
    nnoremap <silent><buffer><expr> <C-c>   denite#do_map('quit')
    nnoremap <silent><buffer><expr> q       denite#do_map('quit')
    nnoremap <silent><buffer><expr> p       denite#do_map('do_action', 'preview')
    nnoremap <silent><buffer><expr> i       denite#do_map('open_filter_buffer')
'''
denite-filter = '''
    inoremap <silent><buffer><expr> <C-c> denite#do_map('quit')
    nnoremap <silent><buffer><expr> <C-c> denite#do_map('quit')
'''

[[plugins]] # filer
repo = 'Shougo/defx.nvim'
on_if = 'has("python3")'
depends = ['vim-hug-neovim-rpc', 'nvim-yarp']
hook_add = '''
    nnoremap <silent> [Space]o :<C-u>Defx<CR>
'''
hook_source = '''
call defx#custom#column('mark', {
    \ 'readonly_icon': '✗',
    \ 'selected_icon': '✓',
    \ })
call defx#custom#column('icon', {
    \ 'directory_icon': '▸',
    \ 'opened_icon': '▾',
    \ 'root_icon': ' ',
    \ })
'''
[plugins.ftplugin]
defx = '''
    nnoremap <silent><buffer><expr> o     defx#async_action('open_or_close_tree')
    nnoremap <silent><buffer><expr> <C-o> defx#async_action('cd', ['..'])
    nnoremap <silent><buffer><expr> h     defx#async_action('cd', ['..'])
    nnoremap <silent><buffer><expr> j     line('.') == line('$') ? 'gg' : 'j'
    nnoremap <silent><buffer><expr> k     line('.') == 1 ? 'G' : 'k'
    nnoremap <silent><buffer><expr> l     defx#async_action('open')
    nnoremap <silent><buffer><expr> <Tab> defx#do_action('toggle_select') . 'j'
    nnoremap <silent><buffer><expr> *     defx#do_action('toggle_select_all')
    nnoremap <silent><buffer><expr> q     defx#do_action('quit')
    nnoremap <silent><buffer><expr> c     defx#do_action('copy')
    nnoremap <silent><buffer><expr> d     defx#do_action('remove_trash')
    nnoremap <silent><buffer><expr> m     defx#do_action('move')
    nnoremap <silent><buffer><expr> p     defx#do_action('paste')
    nnoremap <silent><buffer><expr> r     defx#do_action('rename')
    nnoremap <silent><buffer><expr> n     defx#do_action('new_file')
    nnoremap <silent><buffer><expr> N     defx#do_action('new_directory')
    nnoremap <silent><buffer><expr> .     defx#do_action('toggle_ignored_files')
    nnoremap <silent><buffer><expr> y     defx#do_action('yank_path')
    nnoremap <silent><buffer><expr> ~     defx#async_action('cd')
    nnoremap <silent><buffer><expr> /     defx#do_action('cd', getcwd())
    nnoremap <silent><buffer><expr> <C-l> defx#do_action('redraw')
    nnoremap <silent><buffer><expr> <C-g> defx#do_action('print')
    xnoremap <silent><buffer><expr> <CR>  defx#do_action('toggle_select_visual')
'''

[[plugins]] # completion
repo = 'Shougo/deoplete.nvim'
on_if = 'has("python3")'
depends = ['context_filetype.vim', 'vim-hug-neovim-rpc', 'nvim-yarp']
on_event = 'InsertEnter'
hook_source = '''
    source ~/.vim/rc/plugins/deoplete.vim
    call deoplete#enable()
'''

[[plugins]]
repo = 'Shougo/echodoc.vim'
on_event = 'CompleteDone'
hook_source = '''
    let g:echodoc#type = 'virtual'
    call echodoc#enable()
'''

[[plugins]] # extend register
repo = 'Shougo/neoyank.vim'
on_event = 'TextYankPost'
on_source = ['denite.nvim']
hook_add = '''
    let g:neoyank#length = 100000
'''

[[plugins]] # fuzzy search
repo = 'raghur/fruzzy'
on_source = ['denite.nvim']
hook_source = 'let g:fruzzy#sortonempty = 0'
hook_post_update = 'call fruzzy#install()'

[[plugins]] # faster jk
repo = 'rhysd/accelerated-jk'
on_map = {n = '<Plug>'}
hook_add = '''
    nmap <silent>j <Plug>(accelerated_jk_gj)
    nmap <silent>k <Plug>(accelerated_jk_gk)
'''

[[plugins]]
repo = 'kana/vim-niceblock'
on_map = {x = '<Plug>'}
hook_add = '''
    xmap I  <Plug>(niceblock-I)
    xmap A  <Plug>(niceblock-A)
'''

[[plugins]]
repo = 'kana/vim-operator-replace'
depends = 'vim-operator-user'
on_map = {n = '<Plug>'}
hook_add = '''
    nmap R <Plug>(operator-replace)
'''

[[plugins]]
repo = 'rhysd/vim-operator-surround'
depends = 'vim-operator-user'
on_map = {n = '<Plug>'}
hook_add = '''
    nmap <silent>sa <Plug>(operator-surround-append)a
    nmap <silent>sd <Plug>(operator-surround-delete)a
    nmap <silent>sr <Plug>(operator-surround-replace)a
'''

[[plugins]]
repo = 'kannokanno/previm'
depends = 'open-browser.vim'
on_cmd = 'PrevimOpen'
hook_add = '''
    nnoremap <silent> [Space]p :<C-u>PrevimOpen<CR>
'''

[[plugins]]
repo = 'osyo-manga/vim-jplus'
on_map = {n = '<Plug>'}
hook_add = '''
    nmap J <Plug>(jplus)
'''

[[plugins]] # commentout
repo = 'tyru/caw.vim'
on_map = {nx = '<Plug>'}
hook_add = '''
    let g:caw_no_default_keymappings = 1
    let g:caw_dollarpos_sp_left = ' '
    nmap <silent> gc <Plug>(caw:hatpos:toggle)
    nmap <silent> ga <Plug>(caw:dollarpos:comment)
    nmap <silent> go <Plug>(caw:jump:comment-next)
    nmap <silent> gO <Plug>(caw:jump:comment-prev)
    xmap <silent> gc <Plug>(caw:hatpos:toggle)
    xmap <silent> ga <Plug>(caw:dollarpos:comment)
    xmap <silent> go <Plug>(caw:jump:comment-next)
    xmap <silent> gO <Plug>(caw:jump:comment-prev)
'''

[[plugins]]
repo = 'tyru/open-browser.vim'

[[plugins]]
repo = 'Shougo/neco-syntax'

[[plugins]]
repo = 'Shougo/neco-vim'
on_ft = 'vim'

[[plugins]] # python completion
repo = 'zchee/deoplete-jedi'
on_ft = 'python'
hook_add = '''
    let g:deoplete#sources#jedi#python_path = $PYENV_ROOT.'/shims/python3'
    let g:deoplete#sources#jedi#enable_typeinfo = v:false
    let g:deoplete#sources#jedi#ignore_errors = v:true
'''

[[plugins]] # R plugin
repo = 'jalvesaq/Nvim-R'
on_ft = ['r', 'rmd']
hook_add = '''
    let R_in_buffer = 0
    let R_tmux_split = 1
'''

[[plugins]] # zsh completion
repo = 'zchee/deoplete-zsh'
on_ft = ['zsh', 'sh']

[[plugins]] # csv syntax
repo = 'chrisbra/csv.vim'
on_ft = 'csv'

[[plugins]] # zplug syntax
repo = 'zplug/vim-zplug'
on_ft = 'zsh'

[[plugins]] # TOML syntax
repo = 'cespare/vim-toml'
on_ft = 'toml'

[[plugins]] # GitHub flavored markdown syntax
repo = 'rhysd/vim-gfm-syntax'
on_ft = 'markdown'
