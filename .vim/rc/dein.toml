[[plugins]]
repo = 'Shougo/dein.vim'

[[plugins]] # カラースキーマ
repo = 'altercation/vim-colors-solarized'
hook_add = '''
    set background=dark
    " colorscheme 設定は source 後に行う必要があるので VimEnter で行う。
    " 但し Colorscheme イベントの発生が抑制されないよう nented を付ける。
    au MyAutoCmd VimEnter * nested colorscheme solarized
'''

[[plugins]] # ステータスラインの内容強化
repo = 'itchyny/lightline.vim'
hook_add = '''
    set laststatus=2
    set t_Co=256
    set noshowmode
'''

[[plugins]] # lightline-theme
repo = 'delphinus/lightline-delphinus'

[[plugins]] # インデントの可視化
repo = 'Yggdroot/indentLine'
hook_add = 'let g:indentLine_faster = 1'

[[plugins]] # 日本語ヘルプ
repo = 'vim-jp/vimdoc-ja'

[[plugins]] # コメントアウト
repo = 'scrooloose/nerdcommenter'
hook_add = '''
    let g:NERDCreateDefaultMappings = 0
    let g:NERDSpaceDelims = 1 " Add spaces after comment delimiters by default
    let g:NERDCompactSexyComs = 1 " Use compact syntax for prettified multi-line comments
    let g:NERDDefaultAlign = 'left' " Align line-wise comment delimiters flush left instead of following code indentation
    let g:NERDAltDelims_java = 1 " Set a language to use its alternate delimiters by default
    let g:NERDCustomDelimiters = { 'c': { 'left': '/**','right': '*/' } } " Add your own custom formats or override the defaults
    let g:NERDCommentEmptyLines = 1 " Allow commenting and inverting empty lines (useful when commenting a region)
    let g:NERDTrimTrailingWhitespace = 1 " Enable trimming of trailing whitespace when uncommenting
    let g:NERDToggleCheckAllLines = 1 " Enable NERDCommenterToggle to check all selected lines is commented or not
'''

[[plugins]] # ツリー表示
repo = 'scrooloose/nerdtree'
hook_add = '''
    let g:NERDTreeShowBookmarks=1
    let g:NERDTreeShowHidden=1
    let g:NERDTreeQuitOnOpen=1
    let g:NERDTreeIgnore=['\.DS_Store$','\.git']
    autocmd StdinReadPre * let s:std_in=1
    autocmd VimEnter * if argc() == 0 && !exists("s:std_in") | NERDTree | endif
    autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTree") && b:NERDTree.isTabTree()) | q | endif
    nnoremap <silent><C-o> :NERDTreeToggle<CR>
'''

[[plugins]] # deoplete用
repo = 'roxma/vim-hug-neovim-rpc'
on_if = '!has("nvim")'

[[plugins]] # deoplete用
repo = 'roxma/nvim-yarp'
on_if = '!has("nvim")'

################
# シンタックス #
################
[[plugins]] # 構文チェック
repo = 'scrooloose/syntastic'

[[plugins]] # カーソル位置のコンテキストに合わせてftを切り替える
repo = 'osyo-manga/vim-precious'
depends = ['context_filetype.vim']

[[plugins]] # カーソル位置のコンテキストのftを判定するライブラリ
repo = 'Shougo/context_filetype.vim'

[[plugins]] # TOMLのシンタックス
repo = 'cespare/vim-toml'
on_ft = 'toml'
